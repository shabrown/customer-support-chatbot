import json
import tweepy
import boto3
from chatbot import respond
from keys import *

# Retrieve Twitter authentication keys and secrets from keys.py file
auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)
api = tweepy.API(auth)

dynamodb = boto3.resource('dynamodb')

# Getting the table
table = dynamodb.Table('last_seen_id')


def reply_tweets(event, context):
    """
    Pull mentions that are more recent than last_seen_id.
    Reply to the tweets with responses generated by the model.
    """
    last_seen_id = int(table.scan()['Items'][0]['mention_id'])

    # NOTE: Use tweet_mode='extended' below to show uncut long tweets.
    # since_id â€“ Returns only statuses with an ID more recent than the specified ID.
    mentions = api.mentions_timeline(since_id=last_seen_id, tweet_mode='extended')

    # Store last_seen_id into dynamodb
    for mention in reversed(mentions):

        request = " ".join(mention.full_text.split()[1:])

        chatbot_response = " ".join(respond(f'''{request}''').split()[:-1])

        if len(chatbot_response) > 256:
            chatbot_response = chatbot_response[: 256]

        api.update_status(status='@' + mention.user.screen_name + ' ' + chatbot_response,
                          in_reply_to_status_id=mention.id)

        table.put_item(
            Item={
                'created_by': 'Sha',
                'mention_id': str(mention.id),
            }
        )